<?php\n\n/**\n * Test suite for ParagraphLinks extension\n *\n * @group Extensions\n * @group ParagraphLinks\n * @covers ParagraphLinksHooks\n */\nclass ParagraphLinksHooksTest extends MediaWikiIntegrationTestCase {\n\n\t/**\n\t * @covers ParagraphLinksHooks::onBeforePageDisplay\n\t */\n\tpublic function testOnBeforePageDisplayEnabled() {\n\t\t$this->overrideConfigValues( [\n\t\t\t'ParagraphLinksEnabled' => true,\n\t\t\t'ParagraphLinksNamespaces' => [ NS_MAIN ]\n\t\t] );\n\n\t\t$outputPage = $this->createMock( OutputPage::class );\n\t\t$skin = $this->createMock( Skin::class );\n\t\t$title = Title::newMainPage();\n\t\t$request = new FauxRequest();\n\n\t\t$outputPage->method( 'getTitle' )->willReturn( $title );\n\t\t$outputPage->method( 'getRequest' )->willReturn( $request );\n\t\t$outputPage->expects( $this->once() )->method( 'addModules' )\n\t\t\t->with( 'ext.paragraphlinks' );\n\n\t\tParagraphLinksHooks::onBeforePageDisplay( $outputPage, $skin );\n\t}\n\n\t/**\n\t * @covers ParagraphLinksHooks::onBeforePageDisplay\n\t */\n\tpublic function testOnBeforePageDisplayDisabled() {\n\t\t$this->overrideConfigValues( [\n\t\t\t'ParagraphLinksEnabled' => false\n\t\t] );\n\n\t\t$outputPage = $this->createMock( OutputPage::class );\n\t\t$skin = $this->createMock( Skin::class );\n\n\t\t$outputPage->expects( $this->never() )->method( 'addModules' );\n\n\t\tParagraphLinksHooks::onBeforePageDisplay( $outputPage, $skin );\n\t}\n\n\t/**\n\t * @covers ParagraphLinksHooks::onBeforePageDisplay\n\t */\n\tpublic function testOnBeforePageDisplayWrongNamespace() {\n\t\t$this->overrideConfigValues( [\n\t\t\t'ParagraphLinksEnabled' => true,\n\t\t\t'ParagraphLinksNamespaces' => [ NS_MAIN ]\n\t\t] );\n\n\t\t$outputPage = $this->createMock( OutputPage::class );\n\t\t$skin = $this->createMock( Skin::class );\n\t\t$title = Title::makeTitle( NS_USER, 'TestUser' );\n\t\t$request = new FauxRequest();\n\n\t\t$outputPage->method( 'getTitle' )->willReturn( $title );\n\t\t$outputPage->method( 'getRequest' )->willReturn( $request );\n\t\t$outputPage->expects( $this->never() )->method( 'addModules' );\n\n\t\tParagraphLinksHooks::onBeforePageDisplay( $outputPage, $skin );\n\t}\n\n\t/**\n\t * @covers ParagraphLinksHooks::onBeforePageDisplay\n\t */\n\tpublic function testOnBeforePageDisplayEditAction() {\n\t\t$this->overrideConfigValues( [\n\t\t\t'ParagraphLinksEnabled' => true,\n\t\t\t'ParagraphLinksNamespaces' => [ NS_MAIN ]\n\t\t] );\n\n\t\t$outputPage = $this->createMock( OutputPage::class );\n\t\t$skin = $this->createMock( Skin::class );\n\t\t$title = Title::newMainPage();\n\t\t$request = new FauxRequest( [ 'action' => 'edit' ] );\n\n\t\t$outputPage->method( 'getTitle' )->willReturn( $title );\n\t\t$outputPage->method( 'getRequest' )->willReturn( $request );\n\t\t$outputPage->expects( $this->never() )->method( 'addModules' );\n\n\t\tParagraphLinksHooks::onBeforePageDisplay( $outputPage, $skin );\n\t}\n\n\t/**\n\t * @covers ParagraphLinksHooks::onBeforePageDisplay\n\t */\n\tpublic function testOnBeforePageDisplaySpecialPage() {\n\t\t$this->overrideConfigValues( [\n\t\t\t'ParagraphLinksEnabled' => true,\n\t\t\t'ParagraphLinksNamespaces' => [ NS_SPECIAL ]\n\t\t] );\n\n\t\t$outputPage = $this->createMock( OutputPage::class );\n\t\t$skin = $this->createMock( Skin::class );\n\t\t$title = SpecialPage::getTitleFor( 'Version' );\n\t\t$request = new FauxRequest();\n\n\t\t$outputPage->method( 'getTitle' )->willReturn( $title );\n\t\t$outputPage->method( 'getRequest' )->willReturn( $request );\n\t\t$outputPage->expects( $this->never() )->method( 'addModules' );\n\n\t\tParagraphLinksHooks::onBeforePageDisplay( $outputPage, $skin );\n\t}\n}